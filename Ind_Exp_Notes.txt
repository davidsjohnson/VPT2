Exp 1:
    participants = ["p3", "p1", "p4", "p6"]

    exp_num = 1
    M = 5
    radius = .15
    feature_type = "exp1-hog"

    rem_static = True
    verbose = 2

    cv = cross_validate_windows
    window_size = 30
    k_folds = 3

    # cv = cross_validate_exercises
    # exercises = ["a", "b", "c", "d", "e"]

    steps1 = [("SVC", SVC(C=10, kernel='linear', decision_function_shape='ovr', probability=False))]

    # clfs = [Pipeline(steps1), Pipeline(steps2)]
    # pos = (0, 1)
    # neg = ((1,2), (2,))
    #
    # clf = HierarchicalClassifier(clfs, pos, neg)

    clf = Pipeline(steps1)

    main(M, radius, clf, feature_type, participants, exp_num, cv, window_size, k_folds, rem_static=rem_static, verbose=verbose)


Exp 2:
    participants = ["p3", "p1", "p4", "p6"]

    exp_num = 1
    M = 5
    radius = .15
    feature_type = "exp1-honv"

    rem_static = True
    verbose = 2

    cv = cross_validate_windows
    window_size = 30
    k_folds = 3

    # cv = cross_validate_exercises
    # exercises = ["a", "b", "c", "d", "e"]

    steps1 = [("SVC", SVC(C=10, kernel='linear', decision_function_shape='ovr', probability=False))]

    # clfs = [Pipeline(steps1), Pipeline(steps2)]
    # pos = (0, 1)
    # neg = ((1,2), (2,))
    #
    # clf = HierarchicalClassifier(clfs, pos, neg)

    clf = Pipeline(steps1)

